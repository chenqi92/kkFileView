name: Docker Release

on:
  push:
    branches: [ master ]
    paths:
      - 'VERSION'

jobs:
  docker-build-and-push:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate VERSION file
      run: |
        chmod +x scripts/validate-version.sh
        ./scripts/validate-version.sh

    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'adopt'
        cache: maven

    - name: Read VERSION file
      id: version
      run: |
        VERSION=$(cat VERSION | tr -d '\n\r\t ' | head -1)
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Building version: $VERSION"

        # 验证版本号不为空
        if [ -z "$VERSION" ]; then
          echo "ERROR: VERSION is empty"
          exit 1
        fi
      
    - name: Build with Maven
      run: mvn -B package -Dmaven.test.skip=true --file pom.xml
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push base image
      uses: docker/build-push-action@v5
      with:
        context: ./docker/kkfileview-base
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/kkfileview-base:${{ steps.version.outputs.VERSION }}
          ${{ secrets.DOCKER_USERNAME }}/kkfileview-base:latest
        cache-from: type=gha,scope=base
        cache-to: type=gha,mode=max,scope=base
        
    - name: Extract repository name
      id: repo
      run: |
        REPO_NAME=${GITHUB_REPOSITORY#*/}
        REPO_NAME_LOWER=$(echo "$REPO_NAME" | tr '[:upper:]' '[:lower:]')
        echo "REPO_NAME=$REPO_NAME" >> $GITHUB_OUTPUT
        echo "REPO_NAME_LOWER=$REPO_NAME_LOWER" >> $GITHUB_OUTPUT
        echo "Original repo name: $REPO_NAME"
        echo "Lowercase repo name: $REPO_NAME_LOWER"

    - name: Build and push Docker images
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        build-args: |
          VERSION=${{ steps.version.outputs.VERSION }}
          DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/kkfileview:${{ steps.version.outputs.VERSION }}
          ${{ secrets.DOCKER_USERNAME }}/kkfileview:latest
          ghcr.io/${{ github.repository_owner }}/${{ steps.repo.outputs.REPO_NAME_LOWER }}:${{ steps.version.outputs.VERSION }}
          ghcr.io/${{ github.repository_owner }}/${{ steps.repo.outputs.REPO_NAME_LOWER }}:latest
        cache-from: type=gha,scope=app
        cache-to: type=gha,mode=max,scope=app
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.VERSION }}
        release_name: Release v${{ steps.version.outputs.VERSION }}
        body: |
          ## Docker Images

          ### Docker Hub
          - `${{ secrets.DOCKER_USERNAME }}/kkfileview:${{ steps.version.outputs.VERSION }}`
          - `${{ secrets.DOCKER_USERNAME }}/kkfileview:latest`

          ### GitHub Container Registry
          - `ghcr.io/${{ github.repository_owner }}/${{ steps.repo.outputs.REPO_NAME_LOWER }}:${{ steps.version.outputs.VERSION }}`
          - `ghcr.io/${{ github.repository_owner }}/${{ steps.repo.outputs.REPO_NAME_LOWER }}:latest`

          ### Supported Architectures
          - linux/amd64
          - linux/arm64

          ### Usage
          ```bash
          # Using Docker Hub
          docker run -d -p 8012:8012 ${{ secrets.DOCKER_USERNAME }}/kkfileview:${{ steps.version.outputs.VERSION }}

          # Using GitHub Container Registry
          docker run -d -p 8012:8012 ghcr.io/${{ github.repository_owner }}/${{ steps.repo.outputs.REPO_NAME_LOWER }}:${{ steps.version.outputs.VERSION }}
          ```
        draft: false
        prerelease: false
